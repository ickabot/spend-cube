library(tidyverse)
library(magrittr)
library(stringr)
library(lubridate)
library(readr)
library(readxl)
CleanColnames <- function(df) {
colnames(df) <- str_replace_all(colnames(df),"[[:punct:]]", "")
colnames(df) <- str_replace_all(colnames(df)," ","_")
colnames(df) <- tolower(colnames(df))
}
Add_Transaction_ID <- function(df, dfsource, column, dropcolumn = TRUE) {
### this function is to create a unique transaction id for
### all data sources that can be then used instead of the actual id
### loads tidyverse and magrittr and lubridate if not already loaded
### df is the dataframe, of any size that can be used
### the last two items need to be quoted "" character strings
### dfsource is the source of that df to be used in the unique id
### column is the column that will be used to generate unique ids
library(tidyverse)
library(magrittr)
library(lubridate)
a<-df
a %<>% mutate(trans_id = paste0(dfsource,"_",str_replace_all(as.character(today()),"-",""),match(df[[column]],
unique(df[[column]]))))
### once this is done the column is either dropped or not depending if dropcolumn is
### true or false
if (dropcolumn==TRUE) {
a <- a[ , !(names(a)==column)]
}
a
}
setwd("C:/Users/ipoole/Desktop/Spend Cube/spend-cube")
source("Functionsforspendcube.R")
setwd("C:/Users/ipoole/Desktop/Spend Cube/spend-cube")
source("Functionsforspendcube.R")
### Sets up the DocOutPut Import
setwd("Data_Sources/")
setwd("1_SRM/MM_1_DOCOUTPUT")
t_docoutput_2 <- head(t_docoutput,100) %>% group_by(document_number) %>%
mutate(created_on = mdy(created_on)) %>%
arrange(created_on) %>%
slice(1L)
docoutputcolumntypes<-paste0(rep("c",11),collapse = "")
t_docoutput <- bind_rows(lapply(dir_docoutput,read_tsv,col_types = docoutputcolumntypes))
### Sets up the DocOutPut Import
setwd("1_SRM/MM_1_DOCOUTPUT")
### Sets the wd as in the data sources directory
setwd("Data_Sources/")
### loads packages and functions
setwd("C:/Users/ipoole/Desktop/Spend Cube/spend-cube")
### Sets the wd as in the data sources directory
setwd("Data_Sources/")
### Sets up the DocOutPut Import
setwd("1_SRM/MM_1_DOCOUTPUT")
dir_docoutput <- dir()
docoutputcolumntypes<-paste0(rep("c",11),collapse = "")
t_docoutput <- bind_rows(lapply(dir_docoutput,read_tsv,col_types = docoutputcolumntypes))
colnames(t_docoutput)<-CleanColnames(t_docoutput)
t_docoutput_2 <- head(t_docoutput,100) %>% group_by(document_number) %>%
mutate(created_on = mdy(created_on)) %>%
arrange(created_on) %>%
slice(1L)
View(t_docoutput_2)
View(t_docoutput_2)
t_docoutput %<>% group_by(document_number) %>%
mutate(po_version = row_number(document_number),
created_on = mdy(created_on))
t_docoutput_changePOs <- duplicated(t_docoutput$document_number)
t_docoutput_changePOs <- t_docoutput %>% filter(duplicated(t_docoutput$document_number))
View(t_docoutput_changePOs)
t_docoutput_changePOs <- t_docoutput %>% filter(duplicated(t_docoutput$document_number)) %>%
arrange(document_number)
View(t_docoutput_changePOs)
t_docoutput_changePOs <- t_docoutput %>%
unique()
t_docoutput_changePOs <- t_docoutput %>%
filter(duplicated(document_number)|duplicated(document_number),fromLast = TRUE)
t_docoutput_changePOs <- t_docoutput %>%
filter(duplicated(document_number)|duplicated(document_number,fromLast = TRUE))
t_docoutput$created_on <- mdy(created_on)
View(t_docoutput)
t_docoutput$created_on <- mdy(t_docoutput$created_on)
t_docoutput_changePOs <- t_docoutput %>%
filter(duplicated(document_number)|duplicated(document_number,fromLast = TRUE))
t_docoutput_changePOs <- group_by(document_number) %>%
mutate(po_version = row_number(document_number))
View(t_docoutput_changePOs)
t_docoutput_changePOs %<>% group_by(document_number) %>%
mutate(po_version = row_number(document_number))
View(t_docoutput_changePOs)
t_docoutput_changePOs <- t_docoutput %>%
filter(duplicated(document_number)|duplicated(document_number,fromLast = TRUE))
t_docoutput_nochagePOs <- t_docoutput %>%
filter(!duplicated(document_number)&!duplicated(document_number,fromLast = TRUE))
t_docoutput_changePOs %<>% group_by(document_number) %>%
mutate(po_version = row_number(document_number))
t_docoutput_nochangePOs <- t_docoutput %>%
filter(!duplicated(document_number)&!duplicated(document_number,fromLast = TRUE))
t_docoutput_nochangePOs <- t_docoutput %>%
filter(!duplicated(document_number)&!duplicated(document_number,fromLast = TRUE))
t_docoutput_nochangePOs <- t_docoutput %>%
filter(!duplicated(document_number)&!duplicated(document_number,fromLast = TRUE))
t_docoutput_changePOs_v1 <- t_docoutput_changePOs %>%
filter(po_version == 1) %>%
mutate(original_created_on = created_on)
t_docoutput_cpov1_dateselect <- t_docoutput_changePOs_v1 %>%
select(document_number, original_created_on)
t_docoutput_changePOs_vup <- t_docoutput_changePOs %>%
filter(po_version != 1) %>%
left_join(t_docoutput_cpov1_dateselect)
t_docoutput_nochangePOs <- t_docoutput %>%
filter(!duplicated(document_number)&!duplicated(document_number,fromLast = TRUE)) %>%
mutate(po_version = 1, original_created_on = created_on)
t_docouput_f1 <- bind_rows(t_docoutput_changePOs_v1,t_docoutput_changePOs_vup,t_docoutput_nochangePOs)
rm(t_docoutput_cpov1_dateselect)
rm(t_docoutput_cpov1_dateselect, t_docoutput_changePOs_v1,
t_docoutput_changePOs, t_docoutput_nochangePOs, t_docoutput,
t_docoutput_changePOs_vup)
### Sets up the PO Details import
setwd("..")
setwd("MM_2_PODETAILS")
dir_podetails <- dir()
t_podetails <- bind_rows(lapply(dir_podetails,read_xlsx))
View(t_podetails)
### imports and appends all PO Statuses
setwd("..")
setwd("MM_4_POSTATUS")
dir_postatus <- dir()
library(readr)
PO_Status_ALL <- read_delim("PO Status ALL.csv",
";", escape_double = FALSE, trim_ws = TRUE,
skip = 5)
View(PO_Status_ALL)
t_postatus <- bind_rows(lapply(dir_postatus,read_delim,delim = ";", skip = 5))
length(PO_Status_ALL)
t_postatus <- bind_rows(lapply(dir_postatus,read_delim,delim = ";", skip = 5))
coltypes_postatus <- paste0(rep("c",13),rep("d",2),collapse = "")
coltypes_postatus <- paste0(rep("c",13),collapse = "")
coltypes_postatus <- paste0(rep("c",13),"dd",collapse = "")
coltypes_postatus <- paste0(paste0(rep("c",13),collapse = ""),"dd",collapse = "")
t_postatus <- bind_rows(lapply(dir_postatus,read_delim,delim = ";", col_types = coltypes_postatus, skip = 5))
View(t_podetails)
View(t_postatus)
View(PO_Status_ALL)
colnames_postatus_spend <- as.character(read_delim(dir_postatus[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE))
colnames_postatus_spend
colnames_postatus_spend <- as.character(na.omit(read_delim(dir_postatus[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
colnames_postatus_spend <- na.omit(as.character(read_delim(dir_postatus[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
colnames_postatus_names <-  na.omit(as.character(read_delim(dir_postatus[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE)))
colnames_postatus_names
rm_spend <- "$"
rm_spend <- c("$","#")
colnames_postatus_names <- lapply(na.omit(as.character(read_delim(dir_postatus[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))), function(x) x[!x %in% rm_spend])
colnames_postatus_names <- sapply(na.omit(as.character(read_delim(dir_postatus[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))), function(x) x[!x %in% rm_spend])
colnames_postatus_names <- vapply(na.omit(as.character(read_delim(dir_postatus[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))), function(x) x[!x %in% rm_spend])
colnames_postatus_names <- na.omit(as.character(read_delim(dir_postatus[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))))
colnames_postatus_names <- na.omit(as.character(read_delim(dir_postatus[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE)))
colnames_postatus_names <- colnames_postatus_names[!colnames_postatus_names %in% rm_spend]
colnames_postatus_names <- as.character(read_delim(dir_postatus[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))
colnames_postatus_names <- colnames_postatus_names[!colnames_postatus_names %in% rm_spend]
BWColnames <- function (directory) {
rm_spend <- c("$","#")
colstr1 <- as.character(read_delim(directory[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))
colstr1 <- colstr2[!colstr2 %in% rm_spend]
colstr2 <- na.omit(as.character(read_delim(directory[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
paste0(colstr1,colstr2)
}
ColTypesdigitend <- function(n_character_cols,n_digit_cols) {
paste0(paste0(rep("c",n_character_cols),collapse = ""),
rep("d",n_digit_cols),collapse = "")
}
coltypes_postatus <- ColTypesdigitend(dir_postatus)
coltypes_postatus <- ColTypesdigitend(13,2)
paste0(paste0(rep("c",n_character_cols),collapse = ""),
paste0(rep("d",n_digit_cols),collapse = ""),
collapse = ""
}
### function to create column names for BW reports
BWColnames <- function (directory) {
rm_spend <- c("$","#")
colstr1 <- as.character(read_delim(directory[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))
colstr1 <- colstr2[!colstr2 %in% rm_spend]
colstr2 <- na.omit(as.character(read_delim(directory[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
paste0(colstr1,colstr2)
}
ColTypesdigitend <- function(n_character_cols,n_digit_cols) {
ColTypesdigitend <- function(n_character_cols,n_digit_cols) {
paste0(paste0(rep("c",n_character_cols),collapse = ""),
paste0(rep("d",n_digit_cols),collapse = ""),
collapse = "")
}
BWColnames <- function (directory) {
rm_spend <- c("$","#")
colstr1 <- as.character(read_delim(directory[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))
colstr1 <- colstr2[!colstr2 %in% rm_spend]
colstr2 <- na.omit(as.character(read_delim(directory[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
paste0(colstr1,colstr2)
}
}
>
ColTypesdigitend <- function(n_character_cols,n_digit_cols) {
paste0(paste0(rep("c",n_character_cols),collapse = ""),
paste0(rep("d",n_digit_cols),collapse = ""),
collapse = "")
}
BWColnames <- function (directory) {
rm_spend <- c("$","#")
colstr1 <- as.character(read_delim(directory[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))
colstr1 <- colstr2[!colstr2 %in% rm_spend]
colstr2 <- na.omit(as.character(read_delim(directory[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
paste0(colstr1,colstr2)
}
coltypes_postatus <- ColTypesdigitend(13,2)
colnames_postatus <- BWColnames(dir_postatus)
BWColnames <- function (directory) {
rm_spend <- c("$","#")
colstr1 <- as.character(read_delim(directory[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))
colstr1 <- colstr1[!colstr1 %in% rm_spend]
colstr2 <- na.omit(as.character(read_delim(directory[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
paste0(colstr1,colstr2)
}
colnames_postatus <- BWColnames(dir_postatus)
BWColnames <- function (directory) {
rm_spend <- c("$","#")
colstr1 <- as.character(read_delim(directory[1],skip = 5, delim = ";", n_max = 1, col_names = FALSE))
colstr1 <- colstr1[!colstr1 %in% rm_spend]
colstr2 <- na.omit(as.character(read_delim(directory[1],skip = 4, delim = ";", n_max = 1, col_names = FALSE)))
c(colstr1,colstr2)
}
colnames_postatus <- BWColnames(dir_postatus)
t_postatus <- bind_rows(lapply(dir_postatus,read_delim,delim = ";", col_types = coltypes_postatus, col_names = colnames_postatus, skip = 5))
colnames(t_postatus) <- CleanColnames(t_postatus)
t_postatus <- bind_rows(lapply(dir_postatus,read_delim, delim = ";",
col_types = coltypes_postatus,
col_names = colnames_postatus, skip = 5))
colnames(t_postatus) <- CleanColnames(t_postatus)
BWImport <- function(directories,x,y) {
coltypes <- ColTypesdigitend(x,y)
colnames <- BWColnames(directories)
importtable <- bind_rows(lapply(directories,read_delim, delim = ";",
col_types = coltypes,
col_names = colnames, skip = 5))
importtable <- CleanColnames(importtable)
importtable
}
t_postatus <- BWImport(dir_postatus,13,2)
t_postatus <- BWImport(dir_postatus,13,2)
t_postatus <- bind_rows(lapply(dir_postatus,read_delim, delim = ";",
col_types = coltypes_postatus,
col_names = colnames_postatus, skip = 5))
colnames(t_postatus) <- CleanColnames(t_postatus)
### sets wd for shopping carts
setwd("..")
setwd("MM_3_SCEXTRACT")
dir_scextract <- dir()
dir_scextract
dir_scextract_new <- startsWith(dir_scextract,"sc")
dir_scextract_new <- dir_scextract[startsWith(dir_scextract,"sc")]
dir_scextract_old <- dir_scextract[!startsWith(dir_scextract,"sc")]
read_delim(dir_scextract_old)
read_csv(dir_scextract_old)
read_delim(dir_scextract_old,sep = "|")
read_delim(dir_scextract_old,delim = "|")
scextractold<-read_delim(dir_scextract_old,delim = "|")
View(scextractold)
scextractold<-read_delim(dir_scextract_old,delim = "|") %>%
select(1:30)
scextractold<-read_delim(dir_scextract_old,delim = "|")
scextractold<-read_delim(dir_scextract_old,delim = "|") %>%
select(1:30)
colnames(scextractold) <- CleanColnames(scextractold)
